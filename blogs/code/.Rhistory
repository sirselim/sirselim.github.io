NIHS_bili[i]
as.numeric(NIHS_bili[i])
as.numeric(as.matrix(NIHS_bili[i]))
NIHS_bili$rs2741012_T
boxplot(NIHS_bili$T_BILI ~ as.numeric(as.matrix(NIHS_bili[i])))
title(i)
boxplot(NIHS_bili$T_BILI ~ as.numeric(as.matrix(NIHS_bili[i])), ylab="Total serum bilirubin")
title(i)
grep("rs*", colnames(NIHS_bili))
colnames(NIHS_bili[grep("rs*", colnames(NIHS_bili)),])
colnames(NIHS_bili[grep("^rs*", colnames(NIHS_bili)),])
colnames(NIHS_bili[grep("^rs*", colnames(NIHS_bili))])
snps <- colnames(NIHS_bili[grep("^rs*", colnames(NIHS_bili))])
par(mfrow=c(3,3))
for (i in snps) {
boxplot(NIHS_bili$T_BILI ~ as.numeric(as.matrix(NIHS_bili[i])), ylab="Total serum bilirubin")
title(i)
}
par(mfrow=c(4,3))
for (i in snps) {
boxplot(NIHS_bili$T_BILI ~ as.numeric(as.matrix(NIHS_bili[i])), ylab="Total serum bilirubin")
title(i)
}
par(mfrow=c(3,4))
for (i in snps) {
boxplot(NIHS_bili$T_BILI ~ as.numeric(as.matrix(NIHS_bili[i])), ylab="Total serum bilirubin")
title(i)
}
par(mfrow=c(3,4))
for (i in snps) {
boxplot(NIHS_bili$T_BILI ~ as.numeric(as.matrix(NIHS_bili[i])), ylab="Total serum bilirubin", xlab="genotype")
title(i)
}
par(mfrow=c(3,4))
for (i in snps) {
boxplot(NIHS_bili$D_BILI ~ as.numeric(as.matrix(NIHS_bili[i])), ylab="Direct serum bilirubin", xlab="genotype")
title(i)
}
head(NIHS_bili)
par(mfrow=c(3,4))
for (i in snps) {
boxplot(NIHS_bili$CVD_risk_adj ~ as.numeric(as.matrix(NIHS_bili[i])), ylab="CVD risk score", xlab="genotype")
title(i)
}
NIHS_bili$CVD_risk_adj
NIHS_bili$CVD_risk_adj2 <- ifelse(NIHS_bili$CVD_risk_adj == "<30", 32, NIHS_bili$CVD_risk_adj)
NIHS_bili$CVD_risk_adj2
NIHS_bili$CVD_risk_adj2 <- as.numeric(NIHS_bili$CVD_risk_adj)
NIHS_bili$CVD_risk_adj2 <- ifelse(NIHS_bili$CVD_risk_adj == "<30", 32, NIHS_bili$CVD_risk_adj)
NIHS_bili$CVD_risk_adj2
NIHS_bili$CVD_risk_adj2 <- as.numeric(as.matrix(NIHS_bili$CVD_risk_adj))
NIHS_bili$CVD_risk_adj2 <- ifelse(NIHS_bili$CVD_risk_adj == "<30", 32, NIHS_bili$CVD_risk_adj)
NIHS_bili$CVD_risk_adj2
as.matrix(NIHS_bili$CVD_risk_adj)
NIHS_bili$CVD_risk_adj2 <- as.matrix(NIHS_bili$CVD_risk_adj)
NIHS_bili$CVD_risk_adj2 <- ifelse(NIHS_bili$CVD_risk_adj == "<30", 32, NIHS_bili$CVD_risk_adj)
NIHS_bili$CVD_risk_adj2
NIHS_bili$CVD_risk_adj2 <- as.matrix(NIHS_bili$CVD_risk_adj)
NIHS_bili$CVD_risk_adj2 <- ifelse(NIHS_bili$CVD_risk_adj2 == "<30", 32, NIHS_bili$CVD_risk_adj2)
NIHS_bili$CVD_risk_adj2
NIHS_bili$CVD_risk_adj2 <- as.numeric(ifelse(NIHS_bili$CVD_risk_adj2 == "<30", 32, NIHS_bili$CVD_risk_adj2))
NIHS_bili$CVD_risk_adj2
summary(NIHS_bili$CVD_risk_adj2)
NIHS_bili$CVD_risk_adj2 <- as.matrix(NIHS_bili$CVD_risk_adj)
ifelse(NIHS_bili$CVD_risk_adj2 == "<30", 32, NIHS_bili$CVD_risk_adj2)
NIHS_bili$CVD_risk_adj2 <- as.numeric(ifelse(NIHS_bili$CVD_risk_adj2 == "<30", "32", NIHS_bili$CVD_risk_adj2))
summary(NIHS_bili$CVD_risk_adj2)
as.matrix(NIHS_bili$CVD_risk_adj)
NIHS_bili$CVD_risk_adj2 <- as.numeric(ifelse(NIHS_bili$CVD_risk_adj2 == ">30", "32", NIHS_bili$CVD_risk_adj2))
summary(NIHS_bili$CVD_risk_adj2)
NIHS_bili$CVD_risk_adj2 <- as.matrix(NIHS_bili$CVD_risk_adj)
ifelse(NIHS_bili$CVD_risk_adj2 == ">30", "32", NIHS_bili$CVD_risk_adj2)
NIHS_bili$CVD_risk_adj2 <- as.matrix(NIHS_bili$CVD_risk_adj)
NIHS_bili$CVD_risk_adj2 == ">30"
table(NIHS_bili$CVD_risk_adj2 == ">30")
NIHS_bili$CVD_risk_adj2 <- as.numeric(ifelse(NIHS_bili$CVD_risk_adj2 == ">30", "32", NIHS_bili$CVD_risk_adj2))
table(NIHS_bili$CVD_risk_adj2 == "32")
summary(NIHS_bili$CVD_risk_adj2)
par(mfrow=c(3,4))
for (i in snps) {
boxplot(NIHS_bili$CVD_risk_adj2 ~ as.numeric(as.matrix(NIHS_bili[i])), ylab="CVD risk score", xlab="genotype")
title(i)
}
head(NIHS_bili)
NIHS_bili$Bili_group <- ifelse(NIHS_biliS$T_BILI >= 14, "high", "normal")
NIHS_bili$Bili_group <- ifelse(NIHS_bili$T_BILI >= 14, "high", "normal")
table(NIHS_bili$Bili_group, NIHS_bili$MetS)
chisq.test(table(NIHS_bili$Bili_group, NIHS_bili$MetS))
fisher.test(table(NIHS_bili$Bili_group, NIHS_bili$MetS))
table(NIHS_bili$rs2741012_T, NIHS_bili$MetS)
chisq.test(table(NIHS_bili$rs2741012_T, NIHS_bili$MetS))
fisher.test(table(NIHS_bili$rs2741012_T, NIHS_bili$MetS))
table(NIHS_bili$rs2741012_T, NIHS_bili$MetS)
table(NIHS_bili$rs2741023_A, NIHS_bili$MetS)
NIHS_bili$CVD_group2
NIHS_bili$CVD_group
NIHS_bili$CVD_group2
table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group2)
table(NIHS_bili$rs2741012_T, NIHS_bili$CVD_group2)
levels(NIHS_bili$MetS)
levels(NIHS_bili$MetS) <- c("no MetS", "Mets")
table(NIHS_bili$Bili_group, NIHS_bili$MetS)
levels(NIHS_bili$MetS)
table(NIHS_bili$rs2741012_T, NIHS_bili$MetS)
levels(NIHS_bili)
str(NIHS_bili)
NIHS_bili$MetS <- as.factor(NIHS_bili$MetS)
levels(NIHS_bili$MetS) <- c("no MetS", "Mets")
table(NIHS_bili$Bili_group, NIHS_bili$MetS)
chisq.test(table(NIHS_bili$Bili_group, NIHS_bili$MetS))
fisher.test(table(NIHS_bili$Bili_group, NIHS_bili$MetS))
table(NIHS_bili$rs2741012_T, NIHS_bili$MetS)
chisq.test(table(NIHS_bili$rs2741012_T, NIHS_bili$MetS))
table(NIHS_bili$rs2741023_A, NIHS_bili$MetS)
table(NIHS_bili$rs2741023_A, NIHS_bili$MetS)
table(NIHS_bili$rs2741012_T, NIHS_bili$CVD_group2)
chisq.test(table(NIHS_bili$rs2741012_T, NIHS_bili$MetS))
table(NIHS_bili$rs2741012_T, NIHS_bili$MetS)
chisq.test(table(NIHS_bili$rs2741012_T, NIHS_bili$CVD_group2))
fisher.test(table(NIHS_bili$rs2741012_T, NIHS_bili$CVD_group2))
table(NIHS_bili$rs2741012_T, NIHS_bili$CVD_group2)
table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group2)
chisq.test(table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group2))
fisher.test(table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group2))
table(NIHS_bili$rs2741027_A, NIHS_bili$CVD_group2)
chisq.test(table(NIHS_bili$rs2741027_A, NIHS_bili$CVD_group2))
chisq.test(table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group2))
fisher.test(table(NIHS_bili$rs2741027_A, NIHS_bili$CVD_group2))
head(NIHS_bili)
table(NIHS_bili[NIHS_bili$SEX == 2,]$rs2741023_A, NIHS_bili[NIHS_bili$SEX == 2,]$CVD_group2)
chisq.test(table(NIHS_bili[NIHS_bili$SEX == 2,]$rs2741023_A, NIHS_bili[NIHS_bili$SEX == 2,]$CVD_group2))
fisher.test(table(NIHS_bili[NIHS_bili$SEX == 2,]$rs2741023_A, NIHS_bili[NIHS_bili$SEX == 2,]$CVD_group2))
table(NIHS_bili[NIHS_bili$SEX == 1,]$rs2741023_A, NIHS_bili[NIHS_bili$SEX == 1,]$CVD_group2)
chisq.test(table(NIHS_bili[NIHS_bili$SEX == 1,]$rs2741023_A, NIHS_bili[NIHS_bili$SEX == 1,]$CVD_group2))
fisher.test(table(NIHS_bili[NIHS_bili$SEX == 1,]$rs2741023_A, NIHS_bili[NIHS_bili$SEX == 1,]$CVD_group2))
table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group2)
chisq.test(table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group2))
fisher.test(table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group2))
NIHS_bili$CVD_group
NIHS_bili$CVD_group3 <- ifelse(NIHS_bili$CVD_group > 2, 2, 1)
NIHS_bili$CVD_group3
NIHS_bili$CVD_group3 <- as.factor(NIHS_bili$CVD_group3)
levels(NIHS_bili$CVD_group3) <- c("low risk", "high risk")
NIHS_bili$CVD_group3
table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group3)
chisq.test(table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group3))
fisher.test(table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group3))
NIHS_bili$CVD_group3 <- ifelse(NIHS_bili$CVD_group > 1, 2, 1)
NIHS_bili$CVD_group3 <- as.factor(NIHS_bili$CVD_group3)
levels(NIHS_bili$CVD_group3) <- c("low risk", "high risk")
table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group3)
chisq.test(table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group3))
table(NIHS_bili$CVD_group)
NIHS_bili$CVD_group3 <- ifelse(NIHS_bili$CVD_group > 2, 3, NIHS_bili$CVD_group)
NIHS_bili$CVD_group3 <- as.factor(NIHS_bili$CVD_group3)
levels(NIHS_bili$CVD_group3) <- c("low risk", "med risk", "high risk")
table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group3)
chisq.test(table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group3))
fisher.test(table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group3))
table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group2)
chisq.test(table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group2))
fisher.test(table(NIHS_bili$rs2741023_A, NIHS_bili$CVD_group2))
table(NIHS_bili$rs2741023_A, NIHS_bili$MetS)
chisq.test(table(NIHS_bili$rs2741023_A, NIHS_bili$MetS))
fisher.test(table(NIHS_bili$rs2741023_A, NIHS_bili$MetS))
plot(NIHS_bili$CVD_risk_adj2, NIHS_bili$T_BILI)
plot(NIHS_bili$CVD_risk_adj2, NIHS_bili$T_BILI)
plot(NIHS_bili$CVD_risk_adj2 ~ NIHS_bili$T_BILI)
plot(NIHS_bili$CVD_risk_adj2 ~ NIHS_bili$T_BILI, pch=20)
lm(NIHS_bili$CVD_risk_adj2 ~ NIHS_bili$T_BILI + NIHS_bili$rs2741012_T)
plot(lm(NIHS_bili$CVD_risk_adj2 ~ NIHS_bili$T_BILI + NIHS_bili$rs2741012_T))
summary(lm(NIHS_bili$CVD_risk_adj2 ~ NIHS_bili$T_BILI + NIHS_bili$rs2741012_T))
summary(lm(NIHS_bili$CVD_risk_adj2 ~ NIHS_bili$T_BILI + NIHS_bili$rs2741012_T + NIHS_bili$SEX))
summary(lm(NIHS_bili$CVD_risk_adj2 ~ NIHS_bili$T_BILI + NIHS_bili$rs2741012_T + NIHS_bili$SEX + NIHS_bili$AGE_2000NIHS))
summary(lm(NIHS_bili$CVD_risk_adj2 ~ NIHS_bili$T_BILI + NIHS_bili$SEX + NIHS_bili$AGE_2000NIHS))
summary(lm(NIHS_bili$CVD_risk_adj2 ~ NIHS_bili$T_BILI))
summary(lm(NIHS_bili$CVD_group2 ~ NIHS_bili$T_BILI))
summary(glm(NIHS_bili$CVD_group2 ~ NIHS_bili$T_BILI))
chisq.test(table(NIHS_bili$Bili_group, NIHS_bili$MetS))
fisher.test(table(NIHS_bili$Bili_group, NIHS_bili$MetS))
table(NIHS_bili$rs2741012_T, NIHS_bili$Bili_group)
chisq.test(table(NIHS_bili$rs2741012_T, NIHS_bili$Bili_group))
fisher.test(table(NIHS_bili$rs2741012_T, NIHS_bili$Bili_group))
table(NIHS2010.pheno$STROKE)
plot(NIHS2010.pheno$TOTAL.BILIRUBIN, NIHS2010.pheno$adj_risk)
colnames(NIHS2010.pheno)
new <- NIHS2010.pheno[c(1,39)]
head(new)
test <- merge(NIHS_bili, new, by="UUID", sort=F, all=T)
head(test)
par(mfrow=c(3,4))
for (i in snps) {
boxplot(NIHS_bili$T_BILI ~ as.numeric(as.matrix(NIHS_bili[i])), ylab="Total serum bilirubin", xlab="genotype")
title(i)
}
par(mfrow=c(3,4))
for (i in snps) {
boxplot(NIHS_bili$T_BILI ~ as.numeric(as.matrix(NIHS_bili[i])), ylab="Total serum bilirubin (mmol/L)", xlab="genotype")
title(i)
}
png(file="/media/miles/Data/Phd/Chapter_TraitGWAS/Figures/boxplots_bili_genotype_130715.png",
width=1600,
height=1600,
res=300)
par(mfrow=c(3,4))
for (i in snps) {
boxplot(NIHS_bili$T_BILI ~ as.numeric(as.matrix(NIHS_bili[i])), ylab="Total serum bilirubin (mmol/L)", xlab="genotype")
title(i)
}
dev.off()
?png
png(file="/media/miles/Data/Phd/Chapter_TraitGWAS/Figures/boxplots_bili_genotype_%d_130715.png",
width=2200,
height=22000,
res=300)
par(mfrow=c(3,4))
for (i in snps) {
boxplot(NIHS_bili$T_BILI ~ as.numeric(as.matrix(NIHS_bili[i])), ylab="Total serum bilirubin (mmol/L)", xlab="genotype")
title(i)
}
dev.off()
png(file="/media/miles/Data/Phd/Chapter_TraitGWAS/Figures/boxplots_bili_genotype_%d_130715.png",
width=2200,
height=2200,
res=300)
par(mfrow=c(3,4))
for (i in snps) {
boxplot(NIHS_bili$T_BILI ~ as.numeric(as.matrix(NIHS_bili[i])), ylab="Total serum bilirubin (mmol/L)", xlab="genotype")
title(i)
}
dev.off()
png(file="/media/miles/Data/Phd/Chapter_TraitGWAS/Figures/boxplots_bili_genotype_%d_130715.png",
width=2200,
height=2200,
res=300)
par(mfrow=c(3,4), mar=c(4,3.85,2,1)+0.1)
for (i in snps) {
boxplot(NIHS_bili$T_BILI ~ as.numeric(as.matrix(NIHS_bili[i])), ylab="Total serum bilirubin (mmol/L)", xlab="genotype")
title(i)
}
dev.off()
png(file="/media/miles/Data/Phd/Chapter_TraitGWAS/Figures/boxplots_bili_genotype_%d_130715.png",
width=2200,
height=2200,
res=300)
par(mfrow=c(4,4), mar=c(4,3.85,2,1)+0.1)
for (i in snps) {
boxplot(NIHS_bili$T_BILI ~ as.numeric(as.matrix(NIHS_bili[i])), ylab="Total serum bilirubin (mmol/L)", xlab="genotype")
title(i)
}
dev.off()
png(file="/media/miles/Data/Phd/Chapter_TraitGWAS/Figures/boxplots_bili_genotype_%d_130715.png",
width=2200,
height=2200,
res=300)
par(mfrow=c(4,4), mar=c(4,3.85,2,1)+0.1, cex=0.85)
for (i in snps) {
boxplot(NIHS_bili$T_BILI ~ as.numeric(as.matrix(NIHS_bili[i])), ylab="Total serum bilirubin (mmol/L)", xlab="genotype")
title(i)
}
dev.off()
png(file="/media/miles/Data/Phd/Chapter_TraitGWAS/Figures/boxplots_bili_genotype_%d_130715.png",
width=2200,
height=2200,
res=300)
par(mfrow=c(4,4), mar=c(4,3.85,2,1)+0.1, cex=0.45)
for (i in snps) {
boxplot(NIHS_bili$T_BILI ~ as.numeric(as.matrix(NIHS_bili[i])), ylab="Total serum bilirubin (mmol/L)", xlab="genotype")
title(i)
}
dev.off()
png(file="/media/miles/Data/Phd/Chapter_TraitGWAS/Figures/boxplots_bili_genotype_%d_130715.png",
width=2200,
height=2200,
res=300)
par(mfrow=c(4,4), mar=c(4,3.85,2.5,1.5)+0.1, cex=0.45)
for (i in snps) {
boxplot(NIHS_bili$T_BILI ~ as.numeric(as.matrix(NIHS_bili[i])), ylab="Total serum bilirubin (mmol/L)", xlab="genotype")
title(i)
}
dev.off()
table(NIHS_bili$rs2741012_T, NIHS_bili$Bili_group)
chisq.test(table(NIHS_bili$rs2741012_T, NIHS_bili$Bili_group))
fisher.test(table(NIHS_bili$rs2741012_T, NIHS_bili$Bili_group))
table(NIHS_bili$rs6744284_T, NIHS_bili$MetS)
chisq.test(table(NIHS_bili$rs6744284_T, NIHS_bili$MetS))
fisher.test(table(NIHS_bili$rs6744284_T, NIHS_bili$MetS))
table(NIHS_bili$rs6744284_T, NIHS_bili$Bili_group)
chisq.test(table(NIHS_bili$rs6744284_T, NIHS_bili$Bili_group))
fisher.test(table(NIHS_bili$rs6744284_T, NIHS_bili$Bili_group))
table(NIHS_bili$rs6744284_T, NIHS_bili$CVD_group2)
chisq.test(table(NIHS_bili$rs6744284_T, NIHS_bili$CVD_group2))
fisher.test(table(NIHS_bili$rs6744284_T, NIHS_bili$CVD_group2))
chisq.test(table(NIHS_bili$rs6744284_T, NIHS_bili$CVD_group3))
NIHS2000.pheno2$BF
NIHS2000.pheno2[c("BF")]
NIHS2000.pheno2[c("BF"),]
NIHS2000.pheno2[c("BF")]
NIHS2000.pheno2[c("UUID", "BF")]
NIHS2000.pheno2[c("UUID", "BF", "BMI", "Weight")]
NIHS2000.pheno2[c("UUID", "BF", "BMI", "WEIGHT")]
NIHS2000.pheno2[c("UUID", "BF", "BMI", "WEIGHT", "WHR", "HIP")]
new <- NIHS2000.pheno2[c("UUID", "BF", "BMI", "WEIGHT", "WHR", "HIP")]
test <- merge(NIHS_bili, new, by="UUID")
boxplot(test$BF ~ as.numeric(as.matrix(test[i])), ylab="CVD risk score", xlab="genotype")
par(mfrow=c(3,4))
for (i in snps) {
boxplot(test$BF ~ as.numeric(as.matrix(test[i])), ylab="CVD risk score", xlab="genotype")
title(i)
}
par(mfrow=c(3,4))
for (i in snps) {
boxplot(test$BF ~ as.numeric(as.matrix(test[i])), ylab="", xlab="genotype")
title(i)
}
par(mfrow=c(3,4))
for (i in snps) {
boxplot(test$BMI ~ as.numeric(as.matrix(test[i])), ylab="", xlab="genotype")
title(i)
}
par(mfrow=c(3,4))
for (i in snps) {
boxplot(test$WEIGHT ~ as.numeric(as.matrix(test[i])), ylab="", xlab="genotype")
title(i)
}
par(mfrow=c(3,4))
for (i in snps) {
boxplot(test$WHR ~ as.numeric(as.matrix(test[i])), ylab="", xlab="genotype")
title(i)
}
table(NIHS_bili$Bili_group, NIHS_bili$MetS)
chisq.test(table(NIHS_bili$Bili_group, NIHS_bili$MetS))
fisher.test(table(NIHS_bili$Bili_group, NIHS_bili$MetS))
table(NIHS2010.pheno$Bili_group, NIHS2010.pheno$MetS)
chisq.test(table(NIHS2010.pheno$Bili_group, NIHS2010.pheno$MetS))
fisher.test(table(NIHS2010.pheno$Bili_group, NIHS2010.pheno$MetS))
table(NIHS2000.pheno2$Bili_group, NIHS2010.pheno$MetS)
chisq.test(table(NIHS2000.pheno2$Bili_group, NIHS2000.pheno2$MetS))
fisher.test(table(NIHS2000.pheno2$Bili_group, NIHS2000.pheno2$MetS))
table(NIHS2000.pheno2$Bili_group, NIHS2010.pheno$MetS)
NIHS2000.pheno2$Bili_group <- ifelse(NIHS2000.pheno2$T_BILI >= 14, "high", "normal")
table(NIHS2000.pheno2$Bili_group, NIHS2010.pheno$MetS)
table(NIHS2000.pheno2$Bili_group, NIHS2000.pheno$MetS)
table(NIHS2000.pheno2$Bili_group, NIHS2000.pheno2$MetS)
NIHS2000.pheno2 <- read.csv("/media/miles/Data/Phd/Phenome Scan Manuscript/PhenomeScanGWAS/GWAS.plots/updated_GWAS/updated_2000NIHS_pathadmix_130514.csv", head=T)
table(NIHS2000.pheno2$SMOKER)
table(NIHS2000.pheno2$SMOKER==1)
table(NIHS2000.pheno2$MetS)
??plot.
meth_anno <- read.csv("/media/miles/Data/Phd/NI_genetic_data/NI_methyl_data/annotation/GPL13534_HumanMethylation450_15017482_v.1.1.csv",
head=T, skip=7, as.is=T)
## create basedir and targets
grep
grep("CD14", meth_anno$UCSC_RefGene_Name)
meth_anno[rep("CD14", meth_anno$UCSC_RefGene_Name),]
meth_anno[grep("CD14", meth_anno$UCSC_RefGene_Name),]
meth_anno[grep("ASC", meth_anno$UCSC_RefGene_Name),]
meth_anno[grep("ASC$", meth_anno$UCSC_RefGene_Name),]
meth_anno[grep("TMS1", meth_anno$UCSC_RefGene_Name),]
meth_anno[grep("^ASC", meth_anno$UCSC_RefGene_Name),]
meth_anno[grep("^IL10", meth_anno$UCSC_RefGene_Name),]
meth_anno[grep("^IL6", meth_anno$UCSC_RefGene_Name),]
meth_anno[grep("^CD16", meth_anno$UCSC_RefGene_Name),]
meth_anno[grep("^CD16$", meth_anno$UCSC_RefGene_Name),]
meth_anno[grep("^PYCARD", meth_anno$UCSC_RefGene_Name),]
meth_anno[grep("^FCR", meth_anno$UCSC_RefGene_Name),]
cor(mtcars)
?step
?p.adjust
library("BiocInstaller", lib.loc="/home/miles/R/x86_64-pc-linux-gnu-library/3.0-bioc-devel")
biocLite('Homo.sapiens')
library(Homo.sapiens)
id <- select(Homo.sapiens, "KIT", "ENTREZID", "SYMBOL")$ENTREZID
id
exons(Homo.sapiens, list(gene_id = id))
id <- select(Homo.sapiens, "FTO", "ENTREZID", "SYMBOL")$ENTREZID
exons(Homo.sapiens, list(gene_id = id))
id <- select(Homo.sapiens, "NLR3P", "ENTREZID", "SYMBOL")$ENTREZID
id <- select(Homo.sapiens, "miR-223", "ENTREZID", "SYMBOL")$ENTREZID
id <- select(Homo.sapiens, "223", "ENTREZID", "SYMBOL")$ENTREZID
id <- select(Homo.sapiens, "hsa-miR", "ENTREZID", "SYMBOL")$ENTREZID
id <- select(Homo.sapiens, "hsa-miR-223", "ENTREZID", "SYMBOL")$ENTREZID
id <- select(Homo.sapiens, "NAAA", "ENTREZID", "SYMBOL")$ENTREZID
exons(Homo.sapiens, list(gene_id = id))
bigcorPar.reduce <- function(x, nblocks = 10, verbose = TRUE, ncore="all", ...){
# library(ff, quietly = TRUE)
require(doMC)
if(ncore=="all"){
ncore = multicore:::detectCores()
registerDoMC(cores = ncore)
} else{
registerDoMC(cores = ncore)
}
NCOL <- ncol(x)
## test if ncol(x) %% nblocks gives remainder 0
if (NCOL %% nblocks != 0){stop("Choose different 'nblocks' so that ncol(x) %% nblocks = 0!")}
## preallocate square matrix of dimension
## ncol(x) in 'ff' single format
# corMAT <- ff(vmode = "single", dim = c(NCOL, NCOL))
corRes <- NULL
## split column numbers into 'nblocks' groups
SPLIT <- split(1:NCOL, rep(1:nblocks, each = NCOL/nblocks))
## create all unique combinations of blocks
COMBS <- expand.grid(1:length(SPLIT), 1:length(SPLIT))
COMBS <- t(apply(COMBS, 1, sort))
COMBS <- unique(COMBS)
## iterate through each block combination, calculate correlation matrix
## between blocks and store them in the preallocated matrix on both
## symmetric sides of the diagonal
results <- foreach(i = 1:4) %dopar% {
# results <- foreach(i = 1:nrow(COMBS)) %dopar% {
COMB <- COMBS[i, ]
G1 <- SPLIT[[COMB[1]]]
G2 <- SPLIT[[COMB[2]]]
if (verbose) cat("Block", COMB[1], "with Block", COMB[2], "\n")
flush.console()
COR <- cor(MAT[, G1], MAT[, G2])
# COR <- cor(MAT[, G1], MAT[, G2], ...)
# Miles edit
# set one triangle of matrix to NA
diag(COR) <- NA
COR[upper.tri(COR)] <- NA
test.melt.cor <- melt(COR);
colnames(test.melt.cor)[3] <- "cor.value";
test.melt.cor <- na.omit(test.melt.cor);
results.cor <- test.melt.cor[(test.melt.cor$cor.value < -0.9 | test.melt.cor$cor.value > 0.9),];
corRes <- rbind(corRes, results.cor)
#
# corMAT[G1, G2] <- COR
# corMAT[G2, G1] <- t(COR)
# COR <- NULL
}
#
# gc()
# return(corRes)
}
mrna.sat <- read.delim('/media/miles/Media/methylation_data/obesity/mir_corr/Abdominal_mRNA_221013.txt', head=T);
mrna.sat.pre <- mrna.sat[,grep('*A$', colnames(mrna.sat))];
mrna.sat.pre <- mrna.sat.pre[,order(names(mrna.sat.pre))];
mrna.sat.post <- mrna.sat[,grep('*B$', colnames(mrna.sat))];
mrna.sat.post <- mrna.sat.post[,order(names(mrna.sat.post))];
#mirna
mirna.sat <- read.csv('/media/miles/Media/methylation_data/obesity/mir_corr/Abdominal_miRNA_data1.csv', head=T, row=1);
mirna.sat.pre <- mirna.sat[,grep('*_pre', colnames(mirna.sat))]
mirna.sat.pre <- mirna.sat.pre[,order(names(mirna.sat.pre))]
mirna.sat.post <- mirna.sat[,grep('*_post', colnames(mirna.sat))]
mirna.sat.post <- mirna.sat.post[,order(names(mirna.sat.post))]
# clean
rm(mrna.sat)
gc(reset=T)
#### dealing with MASSIVE correlation matrices
library(Hmisc)
library(corrplot)
library(reshape2)
sat_test_pre <- data.frame(t(mrna.sat.pre), t(mirna.sat.pre))
test2 <- as.matrix(sat_test_pre)
MAT <- test2
x = MAT
nblocks = 8
verbose = TRUE
ncore="all"
# library(ff, quietly = TRUE)
require(doMC)
if(ncore=="all"){
ncore = multicore:::detectCores()
registerDoMC(cores = ncore)
} else{
registerDoMC(cores = ncore)
}
NCOL <- ncol(x)
## test if ncol(x) %% nblocks gives remainder 0
if (NCOL %% nblocks != 0){stop("Choose different 'nblocks' so that ncol(x) %% nblocks = 0!")}
## preallocate square matrix of dimension
## ncol(x) in 'ff' single format
# corMAT <- ff(vmode = "single", dim = c(NCOL, NCOL))
corRes <- NULL
## split column numbers into 'nblocks' groups
SPLIT <- split(1:NCOL, rep(1:nblocks, each = NCOL/nblocks))
## create all unique combinations of blocks
COMBS <- expand.grid(1:length(SPLIT), 1:length(SPLIT))
COMBS <- t(apply(COMBS, 1, sort))
COMBS <- unique(COMBS)
## iterate through each block combination, calculate correlation matrix
## between blocks and store them in the preallocated matrix on both
## symmetric sides of the diagonal
#   results <- foreach(i = 1:4) %dopar% {
results <- foreach(i = 1:nrow(COMBS)) %dopar% {
COMB <- COMBS[i, ]
G1 <- SPLIT[[COMB[1]]]
G2 <- SPLIT[[COMB[2]]]
if (verbose) cat("Block", COMB[1], "with Block", COMB[2], "\n")
flush.console()
COR <- cor(MAT[, G1], MAT[, G2])
# COR <- cor(MAT[, G1], MAT[, G2], ...)
# Miles edit
# set one triangle of matrix to NA
diag(COR) <- NA
COR[upper.tri(COR)] <- NA
test.melt.cor <- melt(COR);
colnames(test.melt.cor)[3] <- "cor.value";
test.melt.cor <- na.omit(test.melt.cor);
results.cor <- test.melt.cor[(test.melt.cor$cor.value < -0.9 | test.melt.cor$cor.value > 0.9),];
corRes <- rbind(corRes, results.cor)
# COR <- NULL
}
install.packages(c("class", "evaluate", "foreign", "ks", "markdown", "MASS", "Matrix", "mclust", "mgcv", "nlme", "rpart"))
install.packages("nnet", lib="/usr/lib/R/library")
library("BiocInstaller", lib.loc="/home/miles/R/x86_64-pc-linux-gnu-library/3.0-bioc-devel")
biocLite()
chr22`
setwd("/home/miles/git_repositories/personal_blog/sirselim.github.io/blogs/code")
setwd("/home/miles/git_repositories/personal_blog/sirselim.github.io/blogs/code")
